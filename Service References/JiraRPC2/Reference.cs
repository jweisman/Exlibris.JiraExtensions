//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExLibris.JiraExtensions.JiraRPC2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://il-iapps04:8181/rpc/soap/jirasoapservice-v2", ConfigurationName="JiraRPC2.JiraSoapService")]
    public interface JiraSoapService {
        
        [System.ServiceModel.OperationContractAttribute()]
        void getComment();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getServerInfo();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getGroup();
        
        [System.ServiceModel.OperationContractAttribute()]
        void createGroup();
        
        [System.ServiceModel.OperationContractAttribute()]
        void login();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getUser();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getIssue();
        
        [System.ServiceModel.OperationContractAttribute()]
        void addComment();
        
        [System.ServiceModel.OperationContractAttribute()]
        void createUser();
        
        [System.ServiceModel.OperationContractAttribute()]
        void createIssue();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getComponents();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getConfiguration();
        
        [System.ServiceModel.OperationContractAttribute()]
        void updateUser();
        
        [System.ServiceModel.OperationContractAttribute()]
        void updateGroup();
        
        [System.ServiceModel.OperationContractAttribute()]
        void addUserToGroup();
        
        [System.ServiceModel.OperationContractAttribute()]
        void removeUserFromGroup();
        
        [System.ServiceModel.OperationContractAttribute()]
        void updateIssue();
        
        [System.ServiceModel.OperationContractAttribute()]
        void deleteIssue();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getAvailableActions();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getSecurityLevel();
        
        [System.ServiceModel.OperationContractAttribute()]
        void createProject();
        
        [System.ServiceModel.OperationContractAttribute()]
        void updateProject();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getProjectByKey();
        
        [System.ServiceModel.OperationContractAttribute()]
        void removeAllRoleActorsByProject();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getPriorities();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getResolutions();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getIssueTypes();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getSubTaskIssueTypes();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getStatuses();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getIssueTypesForProject();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getProjectRoles();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getProjectRole();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getProjectRoleActors();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getDefaultRoleActors();
        
        [System.ServiceModel.OperationContractAttribute()]
        void removeAllRoleActorsByNameAndType();
        
        [System.ServiceModel.OperationContractAttribute()]
        void deleteProjectRole();
        
        [System.ServiceModel.OperationContractAttribute()]
        void updateProjectRole();
        
        [System.ServiceModel.OperationContractAttribute()]
        void createProjectRole();
        
        [System.ServiceModel.OperationContractAttribute()]
        void isProjectRoleNameUnique();
        
        [System.ServiceModel.OperationContractAttribute()]
        void addActorsToProjectRole();
        
        [System.ServiceModel.OperationContractAttribute()]
        void removeActorsFromProjectRole();
        
        [System.ServiceModel.OperationContractAttribute()]
        void addDefaultActorsToProjectRole();
        
        [System.ServiceModel.OperationContractAttribute()]
        void removeDefaultActorsFromProjectRole();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getAssociatedNotificationSchemes();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getAssociatedPermissionSchemes();
        
        [System.ServiceModel.OperationContractAttribute()]
        void deleteProject();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getProjectById();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getVersions();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getComments();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getFavouriteFilters();
        
        [System.ServiceModel.OperationContractAttribute()]
        void releaseVersion();
        
        [System.ServiceModel.OperationContractAttribute()]
        void archiveVersion();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getFieldsForCreate();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getFieldsForEdit();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getSubTaskIssueTypesForProject();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getCustomFields();
        
        [System.ServiceModel.OperationContractAttribute()]
        void logout();
        
        [System.ServiceModel.OperationContractAttribute()]
        void editComment();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getProjectWithSchemesById();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getSecurityLevels();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getProjectAvatars();
        
        [System.ServiceModel.OperationContractAttribute()]
        void setProjectAvatar();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getProjectAvatar();
        
        [System.ServiceModel.OperationContractAttribute()]
        void deleteProjectAvatar();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getNotificationSchemes();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getPermissionSchemes();
        
        [System.ServiceModel.OperationContractAttribute()]
        void createPermissionScheme();
        
        [System.ServiceModel.OperationContractAttribute()]
        void deletePermissionScheme();
        
        [System.ServiceModel.OperationContractAttribute()]
        void addPermissionTo();
        
        [System.ServiceModel.OperationContractAttribute()]
        void deletePermissionFrom();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getAllPermissions();
        
        [System.ServiceModel.OperationContractAttribute()]
        void createIssueWithSecurityLevel();
        
        [System.ServiceModel.OperationContractAttribute()]
        void hasPermissionToEditComment();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getFieldsForAction();
        
        [System.ServiceModel.OperationContractAttribute()]
        void progressWorkflowAction();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getIssueById();
        
        [System.ServiceModel.OperationContractAttribute()]
        void addAttachmentsToIssue();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getAttachmentsFromIssue();
        
        [System.ServiceModel.OperationContractAttribute()]
        void addWorklogWithNewRemainingEstimate();
        
        [System.ServiceModel.OperationContractAttribute()]
        void addWorklogAndAutoAdjustRemainingEstimate();
        
        [System.ServiceModel.OperationContractAttribute()]
        void addWorklogAndRetainRemainingEstimate();
        
        [System.ServiceModel.OperationContractAttribute()]
        void deleteWorklogAndAutoAdjustRemainingEstimate();
        
        [System.ServiceModel.OperationContractAttribute()]
        void deleteWorklogAndRetainRemainingEstimate();
        
        [System.ServiceModel.OperationContractAttribute()]
        void deleteWorklogWithNewRemainingEstimate();
        
        [System.ServiceModel.OperationContractAttribute()]
        void updateWorklogAndAutoAdjustRemainingEstimate();
        
        [System.ServiceModel.OperationContractAttribute()]
        void updateWorklogAndRetainRemainingEstimate();
        
        [System.ServiceModel.OperationContractAttribute()]
        void updateWorklogWithNewRemainingEstimate();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getWorklogs();
        
        [System.ServiceModel.OperationContractAttribute()]
        void hasPermissionToCreateWorklog();
        
        [System.ServiceModel.OperationContractAttribute()]
        void hasPermissionToDeleteWorklog();
        
        [System.ServiceModel.OperationContractAttribute()]
        void hasPermissionToUpdateWorklog();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getResolutionDateByKey();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getResolutionDateById();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getIssueCountForFilter();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getIssuesFromTextSearch();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getIssuesFromTextSearchWithProject();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getIssuesFromJqlSearch();
        
        [System.ServiceModel.OperationContractAttribute()]
        void setUserPassword();
        
        [System.ServiceModel.OperationContractAttribute()]
        void deleteUser();
        
        [System.ServiceModel.OperationContractAttribute()]
        void deleteGroup();
        
        [System.ServiceModel.OperationContractAttribute()]
        void refreshCustomFields();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getProjectsNoSchemes();
        
        [System.ServiceModel.OperationContractAttribute()]
        void addVersion();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getSavedFilters();
        
        [System.ServiceModel.OperationContractAttribute()]
        void createIssueWithParent();
        
        [System.ServiceModel.OperationContractAttribute()]
        void createIssueWithParentWithSecurityLevel();
        
        [System.ServiceModel.OperationContractAttribute()]
        void addBase64EncodedAttachmentsToIssue();
        
        [System.ServiceModel.OperationContractAttribute()]
        void createProjectFromObject();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getSecuritySchemes();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getIssuesFromFilter();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getIssuesFromFilterWithLimit();
        
        [System.ServiceModel.OperationContractAttribute()]
        void getIssuesFromTextSearchWithLimit();
        
        [System.ServiceModel.OperationContractAttribute()]
        void setNewProjectAvatar();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface JiraSoapServiceChannel : ExLibris.JiraExtensions.JiraRPC2.JiraSoapService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JiraSoapServiceClient : System.ServiceModel.ClientBase<ExLibris.JiraExtensions.JiraRPC2.JiraSoapService>, ExLibris.JiraExtensions.JiraRPC2.JiraSoapService {
        
        public JiraSoapServiceClient() {
        }
        
        public JiraSoapServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JiraSoapServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JiraSoapServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JiraSoapServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void getComment() {
            base.Channel.getComment();
        }
        
        public void getServerInfo() {
            base.Channel.getServerInfo();
        }
        
        public void getGroup() {
            base.Channel.getGroup();
        }
        
        public void createGroup() {
            base.Channel.createGroup();
        }
        
        public void login() {
            base.Channel.login();
        }
        
        public void getUser() {
            base.Channel.getUser();
        }
        
        public void getIssue() {
            base.Channel.getIssue();
        }
        
        public void addComment() {
            base.Channel.addComment();
        }
        
        public void createUser() {
            base.Channel.createUser();
        }
        
        public void createIssue() {
            base.Channel.createIssue();
        }
        
        public void getComponents() {
            base.Channel.getComponents();
        }
        
        public void getConfiguration() {
            base.Channel.getConfiguration();
        }
        
        public void updateUser() {
            base.Channel.updateUser();
        }
        
        public void updateGroup() {
            base.Channel.updateGroup();
        }
        
        public void addUserToGroup() {
            base.Channel.addUserToGroup();
        }
        
        public void removeUserFromGroup() {
            base.Channel.removeUserFromGroup();
        }
        
        public void updateIssue() {
            base.Channel.updateIssue();
        }
        
        public void deleteIssue() {
            base.Channel.deleteIssue();
        }
        
        public void getAvailableActions() {
            base.Channel.getAvailableActions();
        }
        
        public void getSecurityLevel() {
            base.Channel.getSecurityLevel();
        }
        
        public void createProject() {
            base.Channel.createProject();
        }
        
        public void updateProject() {
            base.Channel.updateProject();
        }
        
        public void getProjectByKey() {
            base.Channel.getProjectByKey();
        }
        
        public void removeAllRoleActorsByProject() {
            base.Channel.removeAllRoleActorsByProject();
        }
        
        public void getPriorities() {
            base.Channel.getPriorities();
        }
        
        public void getResolutions() {
            base.Channel.getResolutions();
        }
        
        public void getIssueTypes() {
            base.Channel.getIssueTypes();
        }
        
        public void getSubTaskIssueTypes() {
            base.Channel.getSubTaskIssueTypes();
        }
        
        public void getStatuses() {
            base.Channel.getStatuses();
        }
        
        public void getIssueTypesForProject() {
            base.Channel.getIssueTypesForProject();
        }
        
        public void getProjectRoles() {
            base.Channel.getProjectRoles();
        }
        
        public void getProjectRole() {
            base.Channel.getProjectRole();
        }
        
        public void getProjectRoleActors() {
            base.Channel.getProjectRoleActors();
        }
        
        public void getDefaultRoleActors() {
            base.Channel.getDefaultRoleActors();
        }
        
        public void removeAllRoleActorsByNameAndType() {
            base.Channel.removeAllRoleActorsByNameAndType();
        }
        
        public void deleteProjectRole() {
            base.Channel.deleteProjectRole();
        }
        
        public void updateProjectRole() {
            base.Channel.updateProjectRole();
        }
        
        public void createProjectRole() {
            base.Channel.createProjectRole();
        }
        
        public void isProjectRoleNameUnique() {
            base.Channel.isProjectRoleNameUnique();
        }
        
        public void addActorsToProjectRole() {
            base.Channel.addActorsToProjectRole();
        }
        
        public void removeActorsFromProjectRole() {
            base.Channel.removeActorsFromProjectRole();
        }
        
        public void addDefaultActorsToProjectRole() {
            base.Channel.addDefaultActorsToProjectRole();
        }
        
        public void removeDefaultActorsFromProjectRole() {
            base.Channel.removeDefaultActorsFromProjectRole();
        }
        
        public void getAssociatedNotificationSchemes() {
            base.Channel.getAssociatedNotificationSchemes();
        }
        
        public void getAssociatedPermissionSchemes() {
            base.Channel.getAssociatedPermissionSchemes();
        }
        
        public void deleteProject() {
            base.Channel.deleteProject();
        }
        
        public void getProjectById() {
            base.Channel.getProjectById();
        }
        
        public void getVersions() {
            base.Channel.getVersions();
        }
        
        public void getComments() {
            base.Channel.getComments();
        }
        
        public void getFavouriteFilters() {
            base.Channel.getFavouriteFilters();
        }
        
        public void releaseVersion() {
            base.Channel.releaseVersion();
        }
        
        public void archiveVersion() {
            base.Channel.archiveVersion();
        }
        
        public void getFieldsForCreate() {
            base.Channel.getFieldsForCreate();
        }
        
        public void getFieldsForEdit() {
            base.Channel.getFieldsForEdit();
        }
        
        public void getSubTaskIssueTypesForProject() {
            base.Channel.getSubTaskIssueTypesForProject();
        }
        
        public void getCustomFields() {
            base.Channel.getCustomFields();
        }
        
        public void logout() {
            base.Channel.logout();
        }
        
        public void editComment() {
            base.Channel.editComment();
        }
        
        public void getProjectWithSchemesById() {
            base.Channel.getProjectWithSchemesById();
        }
        
        public void getSecurityLevels() {
            base.Channel.getSecurityLevels();
        }
        
        public void getProjectAvatars() {
            base.Channel.getProjectAvatars();
        }
        
        public void setProjectAvatar() {
            base.Channel.setProjectAvatar();
        }
        
        public void getProjectAvatar() {
            base.Channel.getProjectAvatar();
        }
        
        public void deleteProjectAvatar() {
            base.Channel.deleteProjectAvatar();
        }
        
        public void getNotificationSchemes() {
            base.Channel.getNotificationSchemes();
        }
        
        public void getPermissionSchemes() {
            base.Channel.getPermissionSchemes();
        }
        
        public void createPermissionScheme() {
            base.Channel.createPermissionScheme();
        }
        
        public void deletePermissionScheme() {
            base.Channel.deletePermissionScheme();
        }
        
        public void addPermissionTo() {
            base.Channel.addPermissionTo();
        }
        
        public void deletePermissionFrom() {
            base.Channel.deletePermissionFrom();
        }
        
        public void getAllPermissions() {
            base.Channel.getAllPermissions();
        }
        
        public void createIssueWithSecurityLevel() {
            base.Channel.createIssueWithSecurityLevel();
        }
        
        public void hasPermissionToEditComment() {
            base.Channel.hasPermissionToEditComment();
        }
        
        public void getFieldsForAction() {
            base.Channel.getFieldsForAction();
        }
        
        public void progressWorkflowAction() {
            base.Channel.progressWorkflowAction();
        }
        
        public void getIssueById() {
            base.Channel.getIssueById();
        }
        
        public void addAttachmentsToIssue() {
            base.Channel.addAttachmentsToIssue();
        }
        
        public void getAttachmentsFromIssue() {
            base.Channel.getAttachmentsFromIssue();
        }
        
        public void addWorklogWithNewRemainingEstimate() {
            base.Channel.addWorklogWithNewRemainingEstimate();
        }
        
        public void addWorklogAndAutoAdjustRemainingEstimate() {
            base.Channel.addWorklogAndAutoAdjustRemainingEstimate();
        }
        
        public void addWorklogAndRetainRemainingEstimate() {
            base.Channel.addWorklogAndRetainRemainingEstimate();
        }
        
        public void deleteWorklogAndAutoAdjustRemainingEstimate() {
            base.Channel.deleteWorklogAndAutoAdjustRemainingEstimate();
        }
        
        public void deleteWorklogAndRetainRemainingEstimate() {
            base.Channel.deleteWorklogAndRetainRemainingEstimate();
        }
        
        public void deleteWorklogWithNewRemainingEstimate() {
            base.Channel.deleteWorklogWithNewRemainingEstimate();
        }
        
        public void updateWorklogAndAutoAdjustRemainingEstimate() {
            base.Channel.updateWorklogAndAutoAdjustRemainingEstimate();
        }
        
        public void updateWorklogAndRetainRemainingEstimate() {
            base.Channel.updateWorklogAndRetainRemainingEstimate();
        }
        
        public void updateWorklogWithNewRemainingEstimate() {
            base.Channel.updateWorklogWithNewRemainingEstimate();
        }
        
        public void getWorklogs() {
            base.Channel.getWorklogs();
        }
        
        public void hasPermissionToCreateWorklog() {
            base.Channel.hasPermissionToCreateWorklog();
        }
        
        public void hasPermissionToDeleteWorklog() {
            base.Channel.hasPermissionToDeleteWorklog();
        }
        
        public void hasPermissionToUpdateWorklog() {
            base.Channel.hasPermissionToUpdateWorklog();
        }
        
        public void getResolutionDateByKey() {
            base.Channel.getResolutionDateByKey();
        }
        
        public void getResolutionDateById() {
            base.Channel.getResolutionDateById();
        }
        
        public void getIssueCountForFilter() {
            base.Channel.getIssueCountForFilter();
        }
        
        public void getIssuesFromTextSearch() {
            base.Channel.getIssuesFromTextSearch();
        }
        
        public void getIssuesFromTextSearchWithProject() {
            base.Channel.getIssuesFromTextSearchWithProject();
        }
        
        public void getIssuesFromJqlSearch() {
            base.Channel.getIssuesFromJqlSearch();
        }
        
        public void setUserPassword() {
            base.Channel.setUserPassword();
        }
        
        public void deleteUser() {
            base.Channel.deleteUser();
        }
        
        public void deleteGroup() {
            base.Channel.deleteGroup();
        }
        
        public void refreshCustomFields() {
            base.Channel.refreshCustomFields();
        }
        
        public void getProjectsNoSchemes() {
            base.Channel.getProjectsNoSchemes();
        }
        
        public void addVersion() {
            base.Channel.addVersion();
        }
        
        public void getSavedFilters() {
            base.Channel.getSavedFilters();
        }
        
        public void createIssueWithParent() {
            base.Channel.createIssueWithParent();
        }
        
        public void createIssueWithParentWithSecurityLevel() {
            base.Channel.createIssueWithParentWithSecurityLevel();
        }
        
        public void addBase64EncodedAttachmentsToIssue() {
            base.Channel.addBase64EncodedAttachmentsToIssue();
        }
        
        public void createProjectFromObject() {
            base.Channel.createProjectFromObject();
        }
        
        public void getSecuritySchemes() {
            base.Channel.getSecuritySchemes();
        }
        
        public void getIssuesFromFilter() {
            base.Channel.getIssuesFromFilter();
        }
        
        public void getIssuesFromFilterWithLimit() {
            base.Channel.getIssuesFromFilterWithLimit();
        }
        
        public void getIssuesFromTextSearchWithLimit() {
            base.Channel.getIssuesFromTextSearchWithLimit();
        }
        
        public void setNewProjectAvatar() {
            base.Channel.setNewProjectAvatar();
        }
    }
}
